{"version":3,"sources":["/Users/deric/Code/tiny-mobx-form/dist/index.js","/Users/deric/Code/src/validators/validations.ts","/Users/deric/Code/src/validators/index.ts","/Users/deric/Code/src/field.ts","/Users/deric/Code/src/form.ts","/Users/deric/Code/tiny-mobx-form/example/components/instant-validation.js","/Users/deric/Code/tiny-mobx-form/example/components/onblur-validation.js","/Users/deric/Code/tiny-mobx-form/example/introduction.mdx"],"names":["module","exports","require","error","isError","message","required","field","value","requiredIf","dependentFieldName","form","fields","label","length","min","max","Infinity","Number","toString","match","matchingFieldName","LETTERS","letters","test","EMAIL","email","PHONE_NUMBER","phone","POSTAL","postal","NUMBER","number","ALPHA","alpha","size","oneOf","pool","includes","join","validators","additionalValidators","Field","e","name","placeholder","validation","initialValue","_value","reset","this","isTouched","errors","split","map","validator","argument","args","Error","filter","Boolean","__decorate","observable","computed","action","Form","initialValues","options","forEach","props","_this","fieldNames","push","newProps","showErrors","_this2","t","_this3","_this4","isValid","flatMap","_this5","some","_this6","isDirty","reduce","dataset","_this7","struct","observer","TextInputField","type","firstName","validationMessage","hasErrors","isInvalid","onChange","currentTarget","lastName","age","useState","blurredFields","setBlurredFields","onBlur","layoutProps","MDXLayout","MDXContent","components","mdxType","parentName","alt","src","__position","__code","__scope","Playground","InstantValidation","OnblurValidation","__codesandbox","isMDXComponent"],"mappings":"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","file":"static/js/example-introduction.23407619.js","sourcesContent":["\n'use strict'\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./tiny-mobx-form.cjs.production.min.js')\n} else {\n  module.exports = require('./tiny-mobx-form.cjs.development.js')\n}\n","import { IField, IValidator } from '../types';\n\ninterface IsError {\n  (isError: boolean, message: string): string | undefined;\n}\ntype Label = string | undefined;\n\nconst error: IsError = (isError, message = '') => (isError ? message : undefined);\n\nexport const MESSAGES = {\n  required: () => `This field is required.`,\n  requiredIf: (dependentLabel: Label, label: Label) =>\n    `The ${dependentLabel} field is required since the ${label} field is filled out.`,\n  length: (min: string, max: string) =>\n    `Must be at least ${min} and no more than ${max} characters`,\n  match: (label: Label, matchingLabel: Label) => `The ${label} and ${matchingLabel} do not match.`,\n  letters: () => `Please enter letters only.`,\n  email: () => `Please enter a valid email address.`,\n  phone: () => `Please enter a valid phone number.`,\n  postal: () => `Please enter a valid postal number.`,\n  number: () => `Please enter a valid number.`,\n  alpha: () => `Please do not use special characters.`,\n  size: (min: string, max: string) => `Please enter a number between ${min} and ${max}.`,\n  oneOf: (pool: string[]) => `Please choose one of these choices: ${pool.join(', ')}`,\n};\n\nexport const required: IValidator = field => error(!field.value, MESSAGES.required());\n\nexport const requiredIf: IValidator = (field, dependentFieldName) =>\n  error(\n    !(!!field.value && !!field.form.fields[dependentFieldName]),\n    MESSAGES.requiredIf(field.form.fields[dependentFieldName].label, field.label),\n  );\n\nexport const length: IValidator = (field: IField, min: number = 0, max: number = Infinity) =>\n  error(\n    !(!!field.value && field.value.length >= Number(min) && field.value.length <= Number(max)),\n    MESSAGES.length(min.toString(10), max.toString(10)),\n  );\n\nexport const match: IValidator = (field, matchingFieldName: string) =>\n  error(\n    field.value !== field.form.fields[matchingFieldName].value,\n    MESSAGES.match(field.label, field.form.fields[matchingFieldName].label),\n  );\n\nconst LETTERS: RegExp = /^[a-zA-Z\\s]*$/;\nexport const letters: IValidator = ({ value }) =>\n  error(!!value && !LETTERS.test(value), MESSAGES.letters());\n\nconst EMAIL: RegExp = /^[\\w-.]+@([\\w-]+\\.)+[\\w-]{2,4}$/;\nexport const email: IValidator = ({ value }) =>\n  error(!!value && !EMAIL.test(value), MESSAGES.email());\n\nconst PHONE_NUMBER: RegExp = /^(\\()?[2-9]\\d{2}(-|.|\\))?\\d{3}(-|.)?\\d{4}$/;\nexport const phone: IValidator = ({ value }) =>\n  error(!!value && !PHONE_NUMBER.test(value), MESSAGES.phone());\n\nconst POSTAL: RegExp = /^\\d{5}-\\d{4}|\\d{5}|[A-Z]\\d[A-Z] \\d[A-Z]\\d$/;\nexport const postal: IValidator = ({ value }) =>\n  error(!!value && !POSTAL.test(value), MESSAGES.postal());\n\nconst NUMBER: RegExp = /^\\d+$/;\nexport const number: IValidator = ({ value }) =>\n  error(!!value && !NUMBER.test(value), MESSAGES.number());\n\nconst ALPHA: RegExp = /^\\w+$/;\nexport const alpha: IValidator = ({ value }) =>\n  error(!!value && !ALPHA.test(value), MESSAGES.alpha());\n\nexport const size: IValidator = ({ value }, min: number = 0, max: number = Infinity) =>\n  error(\n    !!value && !(Number(value) >= min && Number(value) <= max),\n    MESSAGES.size(min.toString(10), max.toString(10)),\n  );\n\nexport const oneOf: IValidator = ({ value }, ...pool: string[]) =>\n  error(!!value && !pool.includes(value), MESSAGES.oneOf(pool));\n","import { IField, IValidators } from '../types';\nimport {\n  alpha,\n  letters,\n  email,\n  length,\n  match,\n  number,\n  oneOf,\n  phone,\n  postal,\n  required,\n  requiredIf,\n  size,\n} from './validations';\n\nexport function validate(field: IField, validators: IValidators): string[] | any[] {\n  const validations = field.validation.split('|');\n  return validations\n    .map((validation: string) => {\n      // const [validator, argument]: [keyof typeof validators, string] = validation.split(':');\n      const [validator, argument] = validation.split(':');\n      let args: string[] = [];\n      if (argument) {\n        // Handle the arguments passed in\n        args = argument.split(',');\n      }\n      if (!(validator in validators)) {\n        throw new Error(`There is no validator with the name of ${validator}`);\n      }\n      return validators[validator](field, ...args);\n    })\n    .filter(Boolean);\n}\n\nexport const validators = (additionalValidators: IValidators = {}) => ({\n  required,\n  'required-if': requiredIf,\n  length,\n  letters,\n  email,\n  match,\n  number,\n  phone,\n  postal,\n  alpha,\n  size,\n  'one-of': oneOf,\n  ...additionalValidators,\n});\n","import { action, computed, observable } from 'mobx';\n\nimport { validate } from './validators';\nimport { IField, IForm, IFormSchema, IValidators } from './types';\n\nexport class Field implements IField {\n  public name: string;\n\n  public label: string;\n\n  public placeholder: string;\n\n  @observable public initialValue: string;\n\n  @observable private _value: string;\n\n  @observable isTouched = false;\n\n  @observable public validation: string;\n\n  @computed\n  public get value() {\n    return this._value;\n  }\n\n  @computed\n  public get isValid(): boolean {\n    return this.errors.length === 0;\n  }\n\n  @computed\n  public get isDirty(): boolean {\n    return this.initialValue !== this.value;\n  }\n\n  @computed\n  public get errors(): string[] {\n    return validate(this, this.validators);\n  }\n\n  @computed\n  public get hasErrors(): boolean {\n    return this.errors.length > 0;\n  }\n\n  public constructor(\n    public form: IForm,\n    { name, label = '', placeholder = '', validation = '', initialValue = '' }: IFormSchema,\n    private validators: IValidators,\n  ) {\n    this.name = name;\n    this.label = label;\n    this.placeholder = placeholder;\n    this.initialValue = initialValue;\n    this._value = initialValue;\n    this.validation = validation;\n  }\n\n  public set value(value: string) {\n    this._value = value;\n    this.isTouched = true;\n  }\n\n  @action('TinyMobxForm | Field | reset')\n  public reset() {\n    this._value = this.initialValue;\n    this.isTouched = false;\n  }\n}\n","import { action, computed, observable } from 'mobx';\n\nimport { Field } from './field';\nimport { Fields, IForm, IFormOptions, IFormSchema, IInitialValues } from './types';\nimport { validators } from './validators';\n\nexport class Form implements IForm {\n  @observable public fieldNames: string[] = [];\n\n  @observable.struct public fields: Fields = {};\n\n  @computed\n  public get isValid() {\n    return this.fieldNames.filter((name: string) => !this.fields[name].isValid).length === 0;\n  }\n\n  @computed\n  public get errors() {\n    return this.fieldNames.flatMap(name => this.fields[name].errors);\n  }\n\n  @computed\n  public get isDirty() {\n    return this.fieldNames.some(name => this.fields[name].isDirty);\n  }\n\n  @computed\n  public get values() {\n    return this.fieldNames.reduce(\n      (dataset, name) => ({ ...dataset, [name]: this.fields[name].value }),\n      {},\n    );\n  }\n\n  public constructor(\n    fields: IFormSchema[],\n    initialValues: IInitialValues = {},\n    options: IFormOptions = { additionalValidators: {} },\n  ) {\n    fields.forEach((props: IFormSchema) => {\n      this.fieldNames.push(props.name);\n      const initialValue = initialValues[props.name] || props.initialValue;\n      const newProps = { ...props, initialValue };\n      this.fields[newProps.name] = new Field(\n        this,\n        newProps,\n        validators(options.additionalValidators),\n      );\n    });\n  }\n\n  @action('TinyMobxForm | showErrors')\n  public showErrors() {\n    this.fieldNames.forEach(name => {\n      this.fields[name].isTouched = true;\n    });\n  }\n\n  @action('TinyMobxForm | reset')\n  public reset() {\n    this.fieldNames.forEach(name => this.fields[name].reset());\n  }\n}\n","import React from 'react';\nimport { observer } from 'mobx-react';\nimport { TextInputField } from 'evergreen-ui';\n\nimport { Form } from '../../dist';\n\nconst schema = [\n  {\n    name: 'firstName',\n    placeholder: 'John',\n    label: 'First Name',\n    validation: 'required|letters|length:2,20',\n    initialValue: '',\n  },\n  {\n    name: 'lastName',\n    placeholder: 'Appleseed',\n    label: 'Last Name',\n    validation: 'required|letters|length:2,20',\n    initialValue: '',\n  },\n  {\n    name: 'email',\n    placeholder: 'jon@gmail.com',\n    label: 'Email',\n    validation: 'required|email',\n    initialValue: '',\n  },\n  {\n    name: 'age',\n    placeholder: '22',\n    label: 'Age',\n    validation: 'required|number|size:18,100',\n    initialValue: '',\n  },\n];\n\nconst { fields } = new Form(schema);\n\nfunction InstantValidation() {\n  return (\n    <div>\n      <div>\n        <TextInputField\n          required\n          type=\"text\"\n          name=\"firstName\"\n          value={fields.firstName.value}\n          placeholder={fields.firstName.placeholder}\n          label={fields.firstName.label}\n          validationMessage={fields.firstName.isDirty && fields.firstName.hasErrors && fields.firstName.errors.join(' ')}\n          isInvalid={fields.firstName.isDirty && fields.firstName.hasErrors}\n          onChange={e => (fields.firstName.value = e.currentTarget.value)}\n        />\n      </div>\n      <div>\n        <TextInputField\n          required\n          type=\"text\"\n          name=\"lastName\"\n          value={fields.lastName.value}\n          placeholder={fields.lastName.placeholder}\n          label={fields.lastName.label}\n          validationMessage={fields.lastName.isDirty && fields.lastName.hasErrors && fields.lastName.errors.join(' ')}\n          isInvalid={fields.lastName.isDirty && fields.lastName.hasErrors}\n          onChange={e => (fields.lastName.value = e.currentTarget.value)}\n        />\n      </div>\n      <div>\n        <TextInputField\n          required\n          type=\"text\"\n          name=\"email\"\n          value={fields.email.value}\n          placeholder={fields.email.placeholder}\n          label={fields.email.label}\n          validationMessage={fields.email.isDirty && fields.email.hasErrors && fields.email.errors.join(' ')}\n          isInvalid={fields.email.isDirty && fields.email.hasErrors}\n          onChange={e => (fields.email.value = e.currentTarget.value)}\n        />\n      </div>\n      <div>\n        <TextInputField\n          required\n          type=\"text\"\n          name=\"age\"\n          value={fields.age.value}\n          placeholder={fields.age.placeholder}\n          label={fields.age.label}\n          validationMessage={fields.age.isDirty && fields.age.hasErrors && fields.age.errors.join(' ')}\n          isInvalid={fields.age.isDirty && fields.age.hasErrors}\n          onChange={e => (fields.age.value = e.currentTarget.value)}\n          error={fields.age.isDirty && fields.age.hasErrors && fields.age.errors.join(' ')}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default observer(InstantValidation);\n","import React, { useState } from 'react';\nimport { observer } from 'mobx-react';\nimport { TextInputField } from 'evergreen-ui';\n\nimport { Form } from '../../dist';\n\nconst schema = [\n  {\n    name: 'firstName',\n    placeholder: 'John',\n    label: 'First Name',\n    validation: 'required|letters|length:2,20',\n    initialValue: '',\n  },\n  {\n    name: 'lastName',\n    placeholder: 'Appleseed',\n    label: 'Last Name',\n    validation: 'required|letters|length:2,20',\n    initialValue: '',\n  },\n  {\n    name: 'email',\n    placeholder: 'jon@gmail.com',\n    label: 'Email',\n    validation: 'required|email',\n    initialValue: '',\n  },\n  {\n    name: 'age',\n    placeholder: '22',\n    label: 'Age',\n    validation: 'required|number|size:18,100',\n    initialValue: '',\n  },\n];\n\nconst { fields } = new Form(schema);\n\nfunction OnblurValidation() {\n  const [blurredFields, setBlurredFields] = useState([]);\n\n  return (\n    <div>\n      <div>\n        <TextInputField\n          required\n          type=\"text\"\n          name=\"firstName\"\n          value={fields.firstName.value}\n          placeholder={fields.firstName.placeholder}\n          label={fields.firstName.label}\n          validationMessage={blurredFields.includes('firstName') && fields.firstName.hasErrors && fields.firstName.errors.join(' ')}\n          onBlur={() => setBlurredFields([...blurredFields, 'firstName'])}\n          isInvalid={blurredFields.includes('firstName') && fields.firstName.hasErrors}\n          onChange={e => (fields.firstName.value = e.currentTarget.value)}\n        />\n      </div>\n      <div>\n        <TextInputField\n          required\n          type=\"text\"\n          name=\"lastName\"\n          value={fields.lastName.value}\n          placeholder={fields.lastName.placeholder}\n          label={fields.lastName.label}\n          validationMessage={blurredFields.includes('lastName') && fields.lastName.hasErrors && fields.lastName.errors.join(' ')}\n          onBlur={() => setBlurredFields([...blurredFields, 'lastName'])}\n          isInvalid={blurredFields.includes('lastName') && fields.lastName.hasErrors}\n          onChange={e => (fields.lastName.value = e.currentTarget.value)}\n        />\n      </div>\n      <div>\n        <TextInputField\n          required\n          type=\"text\"\n          name=\"email\"\n          value={fields.email.value}\n          placeholder={fields.email.placeholder}\n          label={fields.email.label}\n          validationMessage={blurredFields.includes('email') && fields.email.hasErrors && fields.email.errors.join(' ')}\n          onBlur={() => setBlurredFields([...blurredFields, 'email'])}\n          isInvalid={blurredFields.includes('email') && fields.email.hasErrors}\n          onChange={e => (fields.email.value = e.currentTarget.value)}\n        />\n      </div>\n      <div>\n        <TextInputField\n          required\n          type=\"text\"\n          name=\"age\"\n          value={fields.age.value}\n          placeholder={fields.age.placeholder}\n          label={fields.age.label}\n          validationMessage={blurredFields.includes('age') && fields.age.hasErrors && fields.age.errors.join(' ')}\n          onBlur={() => setBlurredFields([...blurredFields, 'age'])}\n          isInvalid={blurredFields.includes('age') && fields.age.hasErrors}\n          onChange={e => (fields.age.value = e.currentTarget.value)}\n          error={fields.age.isDirty && fields.age.hasErrors && fields.age.errors.join(' ')}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default observer(OnblurValidation);\n","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\nimport { Playground } from 'docz'\nimport './styles.css';\nimport InstantValidation from './components/instant-validation'\nimport OnblurValidation from './components/onblur-validation'\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"tiny-mobx-form\"\n    }}>{`Tiny MobX Form`}</h1>\n    <h2 {...{\n      \"id\": \"\"\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"https://coveralls.io/github/dericgw/tiny-mobx-form?branch=master\"\n      }}><img alt=\"Coverage Status\" src=\"https://coveralls.io/repos/github/dericgw/tiny-mobx-form/badge.svg?branch=master\" /></a></h2>\n    <p>{`✌️Tiny (~2KB) tree-shakable MobX form library`}</p>\n    <h2 {...{\n      \"id\": \"features\"\n    }}>{`Features`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`Small, less than 2KB and tree-shakable`}</li>\n      <li parentName=\"ul\">{`Written in TypeScript using MobX`}</li>\n      <li parentName=\"ul\">{`Includes popular validations`}</li>\n      <li parentName=\"ul\">{`Can add your own custom validations if needed`}</li>\n    </ul>\n    <hr></hr>\n    <h2 {...{\n      \"id\": \"installation\"\n    }}>{`Installation`}</h2>\n    <p><inlineCode parentName=\"p\">{`npm i tiny-mobx-form`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`yarn add tiny-mobx-form`}</inlineCode></p>\n    <hr></hr>\n    <h2 {...{\n      \"id\": \"form\"\n    }}><inlineCode parentName=\"h2\">{`Form`}</inlineCode></h2>\n    <p>{`The `}<inlineCode parentName=\"p\">{`Form`}</inlineCode>{` class is the main module that makes tiny-mobx-form work. The `}<inlineCode parentName=\"p\">{`Form`}</inlineCode>{` takes an array of\nobjects that define a `}<inlineCode parentName=\"p\">{`Field`}</inlineCode>{`. Here are some of the things that the `}<inlineCode parentName=\"p\">{`Form`}</inlineCode>{` does:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Creates fields`}</li>\n      <li parentName=\"ul\">{`Observes fields`}</li>\n      <li parentName=\"ul\">{`Observes values`}</li>\n      <li parentName=\"ul\">{`Observes whether the field has been touched (the value has been changed)`}</li>\n      <li parentName=\"ul\">{`Validation`}</li>\n      <li parentName=\"ul\">{`Validation errors`}</li>\n    </ul>\n    <h3 {...{\n      \"id\": \"form-arguments\"\n    }}><inlineCode parentName=\"h3\">{`Form`}</inlineCode>{` Arguments`}</h3>\n    <p>{`The `}<inlineCode parentName=\"p\">{`Form`}</inlineCode>{` accepts three arguments: `}<inlineCode parentName=\"p\">{`new Form(fields, initialValues, options)`}</inlineCode>{`:`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Argument Name`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Required`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Default`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`fields`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`IFormSchema[]`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`true`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`This is the definition of each field in the form. (See the `}<inlineCode parentName=\"td\">{`IFormSchema`}</inlineCode>{` type below)`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`initialValues`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`{ fieldName: 'value' }`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`false`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`{}`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`These are the initial values for each form field.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`options`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`IFormOptions`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`false`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`{ additionalValidators: {} }`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`These are extra options that can be passed into the form. (See the `}<inlineCode parentName=\"td\">{`IFormOptions`}</inlineCode>{` type below)`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h4 {...{\n      \"id\": \"fields-schema--iformschema\"\n    }}>{`Fields Schema | `}<inlineCode parentName=\"h4\">{`IFormSchema`}</inlineCode></h4>\n    <p>{`Here is the shape of the `}<inlineCode parentName=\"p\">{`IFormSchema`}</inlineCode>{` type:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-typescript\"\n      }}>{`interface IFormSchema {\n  name: string; // The name of the field (must be unique)\n  label?: string; // The label of the field\n  placeholder?: string; // The placeholder of the input\n  validation?: string; // The validation string (\"required|length:2.10|letters\")\n  initialValue?: string; // The initial value of the field\n}\n`}</code></pre>\n    <p>{`Here is an example of what that looks like:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`const schema = [\n  {\n    name: 'firstName',\n    placeholder: 'John',\n    label: 'First Name',\n    validation: 'required|letters|length:2,20',\n    initialValue: '',\n  },\n  {\n    name: 'lastName',\n    placeholder: 'Appleseed',\n    label: 'Last Name',\n    validation: 'required|letters|length:2,20',\n    initialValue: '',\n  },\n  {\n    name: 'email',\n    placeholder: 'jon@gmail.com',\n    label: 'Email',\n    validation: 'required|email',\n    initialValue: '',\n  },\n  {\n    name: 'age',\n    placeholder: '22',\n    label: 'Age',\n    validation: 'required|number|size:18,100',\n    initialValue: '',\n  },\n];\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"form-initial-values\"\n    }}>{`Form Initial Values`}</h4>\n    <p>{`The `}<inlineCode parentName=\"p\">{`Form`}</inlineCode>{` can accept initial values as a second argument. This is good to use when you need to query\nan API for the form values and you do not have the values at the time when the schema is created.\nThe `}<inlineCode parentName=\"p\">{`initialValues`}</inlineCode>{` is an object whose key is the name of the field and the value is the value of\nthat field. Here is an example:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`const initialValues = {\n  firstName: 'Ted',\n  lastName: 'Chavez',\n  email: 'ted@email.com',\n  age: 31\n};\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"form-options--iformoptions\"\n    }}>{`Form Options | `}<inlineCode parentName=\"h4\">{`IFormOptions`}</inlineCode></h4>\n    <p>{`Here is the `}<inlineCode parentName=\"p\">{`IFormOptions`}</inlineCode>{` type with the other dependent types. See the `}<a parentName=\"p\" {...{\n        \"href\": \"#validation\"\n      }}>{`Validation`}</a>{` section for a\nbetter explanation of adding additional validators:`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Right now, there is only one option available, but there will be more in the future.`}</p>\n    </blockquote>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-typescript\"\n      }}>{`interface IFormOptions {\n  additionalValidators: IValidators;\n}\n\ninterface IValidators {\n  [name: string]: IValidator;\n}\n\ninterface IValidator {\n  (field: IField, ...args: any[]): undefined | string;\n}\n`}</code></pre>\n    <p>{`Here is an example of what the options would look like:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`const options = {\n  additionalValidators: {\n    'file-size': fileSizeValidator,\n    'date': dateValidator,\n  } \n};\n`}</code></pre>\n    <blockquote>\n      <p parentName=\"blockquote\">{`See the `}<a parentName=\"p\" {...{\n          \"href\": \"#validation\"\n        }}>{`Validation`}</a>{` section for more info on custom validators.`}</p>\n    </blockquote>\n    <h3 {...{\n      \"id\": \"form-methods-and-properties\"\n    }}><inlineCode parentName=\"h3\">{`Form`}</inlineCode>{` Methods and Properties`}</h3>\n    <p>{`A `}<inlineCode parentName=\"p\">{`Form`}</inlineCode>{` instance has a few methods and properties available that should be used to work with the\nform. Here is the `}<inlineCode parentName=\"p\">{`IForm`}</inlineCode>{` interface in which the `}<inlineCode parentName=\"p\">{`Form`}</inlineCode>{` implements:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-typescript\"\n      }}>{`interface IForm {\n  fields: IFields; // These are the fields that get instantiated\n  isValid: boolean; // This returns whether all of the fields are valid\n  errors: string[]; // This is an array of error messages\n  isDirty: boolean; // This returns whether the form's initial values have changed\n  values: IValues; // This is an object of all of the fields and their values (good for sending to server)\n  showErrors(): void; // This makes all of the fields touched so that the error message shows for each field\n  reset(): void; // This resets the form to its initial values\n}\n`}</code></pre>\n    <p>{`You can use each of this methods to interact with the `}<inlineCode parentName=\"p\">{`Form`}</inlineCode>{`.`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`See the `}<a parentName=\"p\" {...{\n          \"href\": \"#examples\"\n        }}>{`Examples`}</a>{` for more information on how to work wit the `}<inlineCode parentName=\"p\">{`Form`}</inlineCode>{` instance.`}</p>\n    </blockquote>\n    <hr></hr>\n    <h2 {...{\n      \"id\": \"field\"\n    }}><inlineCode parentName=\"h2\">{`Field`}</inlineCode></h2>\n    <p>{`When a `}<inlineCode parentName=\"p\">{`Form`}</inlineCode>{` is created, the fields (the schema) that are passed into the `}<inlineCode parentName=\"p\">{`Form`}</inlineCode>{` constructor are used\nto create a `}<inlineCode parentName=\"p\">{`Field`}</inlineCode>{` instance. It is possible to access each field by using the field's name:\n`}<inlineCode parentName=\"p\">{`form.fieldName.property`}</inlineCode>{` The `}<inlineCode parentName=\"p\">{`Field`}</inlineCode>{` instance has some helpful methods and properties: `}</p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Access to each field is available by using the field name: `}<inlineCode parentName=\"p\">{`field.name.value`}</inlineCode></p>\n    </blockquote>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-typescript\"\n      }}>{`interface IField {\n  form: IForm; // The Form that the field belongs to\n  name: string; // The name of the field passed in via the schema\n  label?: string; // The field label\n  placeholder?: string; // The placeholder\n  initialValue?: string; // The initial value\n  value?: string; // The current value (computed property)\n  isTouched: boolean; // This is whether the field is touched or \n  validation: string; // The validation string that is passed in\n  isValid: boolean; // Whether or not the field has passed all validations \n  isDirty: boolean; // Does the current value differ from the initial value?\n  hasErrors: boolean; // Does the field have any validation errors?\n  errors: string[]; // The array of errors for the field\n  reset(): void; // Resets the field to the initial value\n}\n`}</code></pre>\n    <blockquote>\n      <p parentName=\"blockquote\">{`A `}<inlineCode parentName=\"p\">{`Field`}</inlineCode>{` can be touched and not dirty if the input has changed from the initial value but then\nreverted back to the initial value, for instance:`}</p>\n      <pre parentName=\"blockquote\"><code parentName=\"pre\" {...{\n          \"className\": \"language-js\"\n        }}>{`// The initialValue is \"jon\"\nfield.value = 'john' // The field is now \"touched\" and \"dirty\"\nfield.value = 'jon' // The field is now \"touched\" but NOT \"dirty\"\n`}</code></pre>\n    </blockquote>\n    <h3 {...{\n      \"id\": \"update-field-value\"\n    }}>{`Update `}<inlineCode parentName=\"h3\">{`Field`}</inlineCode>{` value`}</h3>\n    <p>{`If you need to update a `}<inlineCode parentName=\"p\">{`Field`}</inlineCode>{` value, you simply mutate (change) the value like so:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`field.value = 'Some new value';\n`}</code></pre>\n    <p>{`That is the beauty of working with MobX 👍`}</p>\n    <p>{`Sometimes it is useful to compare two fields and that is why the `}<inlineCode parentName=\"p\">{`Form`}</inlineCode>{` instance lives on each field.\nThis is especially helpful for `}<a parentName=\"p\" {...{\n        \"href\": \"#validation\"\n      }}>{`validation`}</a>{` because you can do things like this with the `}<inlineCode parentName=\"p\">{`Field`}</inlineCode>{`\ninstance.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`const dateValidator = field => {\n  if (moment(field.value).isAfter(field.form.endDate.value)) {\n    return \\`The start date cannot be after the end date.\\`;\n  }\n  return undefined;\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"validation\"\n    }}>{`Validation`}</h2>\n    <p>{`Tiny MobX Form has the most common validations built in and also allows custom validations to be\nadded.`}</p>\n    <h3 {...{\n      \"id\": \"validators\"\n    }}>{`Validators`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`required - `}<inlineCode parentName=\"li\">{`required`}</inlineCode></li>\n      <li parentName=\"ul\">{`required if - `}<inlineCode parentName=\"li\">{`required-if:<name of field>`}</inlineCode>{` | `}<inlineCode parentName=\"li\">{`required-if:last-name`}</inlineCode></li>\n      <li parentName=\"ul\">{`length (string length) - `}<inlineCode parentName=\"li\">{`length:<min>,<max>`}</inlineCode>{` | `}<inlineCode parentName=\"li\">{`length:4,30`}</inlineCode></li>\n      <li parentName=\"ul\">{`match - `}<inlineCode parentName=\"li\">{`match:<name of field>`}</inlineCode>{` | `}<inlineCode parentName=\"li\">{`match:password`}</inlineCode></li>\n      <li parentName=\"ul\">{`letters - `}<inlineCode parentName=\"li\">{`letters`}</inlineCode></li>\n      <li parentName=\"ul\">{`email - `}<inlineCode parentName=\"li\">{`email`}</inlineCode></li>\n      <li parentName=\"ul\">{`phone number - `}<inlineCode parentName=\"li\">{`phone`}</inlineCode></li>\n      <li parentName=\"ul\">{`postal - `}<inlineCode parentName=\"li\">{`postal`}</inlineCode></li>\n      <li parentName=\"ul\">{`number - `}<inlineCode parentName=\"li\">{`number`}</inlineCode></li>\n      <li parentName=\"ul\">{`alphanumeric - `}<inlineCode parentName=\"li\">{`alpha`}</inlineCode></li>\n      <li parentName=\"ul\">{`size (number between) - `}<inlineCode parentName=\"li\">{`size:<min>,<max>`}</inlineCode>{` | `}<inlineCode parentName=\"li\">{`size:50,100`}</inlineCode></li>\n      <li parentName=\"ul\">{`one of (array list) - `}<inlineCode parentName=\"li\">{`one-of:<comma separated list>`}</inlineCode>{` | `}<inlineCode parentName=\"li\">{`one-of:red,blue,green`}</inlineCode></li>\n    </ul>\n    <h3 {...{\n      \"id\": \"using-validators\"\n    }}>{`Using Validators`}</h3>\n    <p>{`Validators are passed into the form schema and follow this pattern:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`const schema [{\n    name: 'name',\n    validation: 'name-of-validator:all,the,arguments' // Arguments are separated by commas\n}];\n`}</code></pre>\n    <p>{`It is also possible to add more than one validator by separating validators by the pipe `}<inlineCode parentName=\"p\">{`|`}</inlineCode>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`const schema [{\n    name: 'name',\n    validation: 'required|letters|length:2,20'\n}];\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"custom-validators\"\n    }}>{`Custom Validators`}</h3>\n    <p>{`If you would like to add your own custom validators, then you can pass those to the `}<inlineCode parentName=\"p\">{`options`}</inlineCode>{` argument\nof the `}<inlineCode parentName=\"p\">{`Form`}</inlineCode>{` constructor. You would pass them in as an object. The object key is the name of the\nvalidator and the value is the validator:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`const additionalValidators = {\n  'file-size': fileSizeValidator,\n};\n`}</code></pre>\n    <p>{`As an example, say we want to get the file size of a value and we want our validation to look like\nthis: `}<inlineCode parentName=\"p\">{`file-size:2`}</inlineCode>{` (that is 2KB). The validator would look like this:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`// The field is passed in so you can get any of its properties. \n// The other arguments are spread into the validator\nconst fileSizeValidator = (field, max) => {\n  if (!!field.value && field.value.size > max * 1024 /* 1,024 bytes in a KB */) {\n    return \\`The file size is too larger than \\${max}KB\\`;\n  }\n  return undefined;\n}\n`}</code></pre>\n    <p>{`Or, say we wanted a range for our file size that would look like this `}<inlineCode parentName=\"p\">{`file-size:1,4`}</inlineCode>{`. Then our\nvalidator would look like this:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`const fileSizeValidator = (field, min, max) => {\n  if (!!field.value && (field.value.size < min * 1024 || field.value.size > max * 1024)) {\n    return \\`The file size must be between \\${min}KB and \\${max}KB\\`;\n  }\n  return undefined;\n}\n`}</code></pre>\n    <p>{`And then to add that custom validator, you pass it into the `}<inlineCode parentName=\"p\">{`Form`}</inlineCode>{` at the time of construction:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`const schema = [{\n  name: 'avatar',\n  // This is the validator with the min and max...\n  validation: 'file-size:0,2'\n}]\n\n// The name \"file-size\" is important because that is how it is referenced in the schema above.\nconst form = new Form(schema, {}, { 'file-size': fileSizeValidator });\n`}</code></pre>\n    <hr></hr>\n    <h2 {...{\n      \"id\": \"examples\"\n    }}>{`Examples`}</h2>\n    <h3 {...{\n      \"id\": \"instant-validation-example\"\n    }}>{`Instant Validation Example`}</h3>\n    <Playground __position={0} __code={'<InstantValidation />'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      InstantValidation,\n      OnblurValidation\n    }} __codesandbox={``} mdxType=\"Playground\">\n  <InstantValidation mdxType=\"InstantValidation\" />\n    </Playground>\n    <p>{`Here is the code for the Instant Validation Example above:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`import React from 'react';\nimport { observer } from 'mobx-react';\nimport { TextInputField } from 'evergreen-ui';\nimport { Form } from 'tiny-mobx-form';\n\nconst schema = [\n  {\n    name: 'firstName',\n    placeholder: 'John',\n    label: 'First Name',\n    validation: 'required|letters|length:2,20',\n    initialValue: '',\n  },\n  {\n    name: 'lastName',\n    placeholder: 'Appleseed',\n    label: 'Last Name',\n    validation: 'required|letters|length:2,20',\n    initialValue: '',\n  },\n  {\n    name: 'email',\n    placeholder: 'jon@gmail.com',\n    label: 'Email',\n    validation: 'required|email',\n    initialValue: '',\n  },\n  {\n    name: 'age',\n    placeholder: '22',\n    label: 'Age',\n    validation: 'required|number|size:18,100',\n    initialValue: '',\n  },\n];\n\nconst { fields } = new Form(schema);\n\nfunction InstantValidation() {\n  return (\n    <div>\n      <div>\n        <TextInputField\n          required\n          type=\"text\"\n          name=\"firstName\"\n          value={fields.firstName.value}\n          placeholder={fields.firstName.placeholder}\n          label={fields.firstName.label}\n          validationMessage={fields.firstName.isDirty && fields.firstName.hasErrors && fields.firstName.errors.join(' ')}\n          isInvalid={fields.firstName.isDirty && fields.firstName.hasErrors}\n          onChange={e => (fields.firstName.value = e.currentTarget.value)}\n        />\n      </div>\n      <div>\n        <TextInputField\n          required\n          type=\"text\"\n          name=\"lastName\"\n          value={fields.lastName.value}\n          placeholder={fields.lastName.placeholder}\n          label={fields.lastName.label}\n          validationMessage={fields.lastName.isDirty && fields.lastName.hasErrors && fields.lastName.errors.join(' ')}\n          isInvalid={fields.lastName.isDirty && fields.lastName.hasErrors}\n          onChange={e => (fields.lastName.value = e.currentTarget.value)}\n        />\n      </div>\n      <div>\n        <TextInputField\n          required\n          type=\"text\"\n          name=\"email\"\n          value={fields.email.value}\n          placeholder={fields.email.placeholder}\n          label={fields.email.label}\n          validationMessage={fields.email.isDirty && fields.email.hasErrors && fields.email.errors.join(' ')}\n          isInvalid={fields.email.isDirty && fields.email.hasErrors}\n          onChange={e => (fields.email.value = e.currentTarget.value)}\n        />\n      </div>\n      <div>\n        <TextInputField\n          required\n          type=\"text\"\n          name=\"age\"\n          value={fields.age.value}\n          placeholder={fields.age.placeholder}\n          label={fields.age.label}\n          validationMessage={fields.age.isDirty && fields.age.hasErrors && fields.age.errors.join(' ')}\n          isInvalid={fields.age.isDirty && fields.age.hasErrors}\n          onChange={e => (fields.age.value = e.currentTarget.value)}\n          error={fields.age.isDirty && fields.age.hasErrors && fields.age.errors.join(' ')}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default observer(InstantValidation);\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"on-blur-validation-example\"\n    }}>{`On Blur Validation Example`}</h3>\n    <Playground __position={1} __code={'<OnblurValidation />'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      InstantValidation,\n      OnblurValidation\n    }} __codesandbox={``} mdxType=\"Playground\">\n  <OnblurValidation mdxType=\"OnblurValidation\" />\n    </Playground>\n    <p>{`Here is the code for the On Blur Validation Example above:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`import React, { useState } from 'react';\nimport { observer } from 'mobx-react';\nimport { TextInputField } from 'evergreen-ui';\nimport { Form } from 'tiny-mobx-form';\n\nconst schema = [\n  {\n    name: 'firstName',\n    placeholder: 'John',\n    label: 'First Name',\n    validation: 'required|letters|length:2,20',\n    initialValue: '',\n  },\n  {\n    name: 'lastName',\n    placeholder: 'Appleseed',\n    label: 'Last Name',\n    validation: 'required|letters|length:2,20',\n    initialValue: '',\n  },\n  {\n    name: 'email',\n    placeholder: 'jon@gmail.com',\n    label: 'Email',\n    validation: 'required|email',\n    initialValue: '',\n  },\n  {\n    name: 'age',\n    placeholder: '22',\n    label: 'Age',\n    validation: 'required|number|size:18,100',\n    initialValue: '',\n  },\n];\n\nconst { fields } = new Form(schema);\n\nfunction OnblurValidation() {\n  const [blurredFields, setBlurredFields] = useState([]);\n\n  return (\n    <div>\n      <div>\n        <TextInputField\n          required\n          type=\"text\"\n          name=\"firstName\"\n          value={fields.firstName.value}\n          placeholder={fields.firstName.placeholder}\n          label={fields.firstName.label}\n          validationMessage={blurredFields.includes('firstName') && fields.firstName.hasErrors && fields.firstName.errors.join(' ')}\n          onBlur={() => setBlurredFields([...blurredFields, 'firstName'])}\n          isInvalid={blurredFields.includes('firstName') && fields.firstName.hasErrors}\n          onChange={e => (fields.firstName.value = e.currentTarget.value)}\n        />\n      </div>\n      <div>\n        <TextInputField\n          required\n          type=\"text\"\n          name=\"lastName\"\n          value={fields.lastName.value}\n          placeholder={fields.lastName.placeholder}\n          label={fields.lastName.label}\n          validationMessage={blurredFields.includes('lastName') && fields.lastName.hasErrors && fields.lastName.errors.join(' ')}\n          onBlur={() => setBlurredFields([...blurredFields, 'lastName'])}\n          isInvalid={blurredFields.includes('lastName') && fields.lastName.hasErrors}\n          onChange={e => (fields.lastName.value = e.currentTarget.value)}\n        />\n      </div>\n      <div>\n        <TextInputField\n          required\n          type=\"text\"\n          name=\"email\"\n          value={fields.email.value}\n          placeholder={fields.email.placeholder}\n          label={fields.email.label}\n          validationMessage={blurredFields.includes('email') && fields.email.hasErrors && fields.email.errors.join(' ')}\n          onBlur={() => setBlurredFields([...blurredFields, 'email'])}\n          isInvalid={blurredFields.includes('email') && fields.email.hasErrors}\n          onChange={e => (fields.email.value = e.currentTarget.value)}\n        />\n      </div>\n      <div>\n        <TextInputField\n          required\n          type=\"text\"\n          name=\"age\"\n          value={fields.age.value}\n          placeholder={fields.age.placeholder}\n          label={fields.age.label}\n          validationMessage={blurredFields.includes('age') && fields.age.hasErrors && fields.age.errors.join(' ')}\n          onBlur={() => setBlurredFields([...blurredFields, 'age'])}\n          isInvalid={blurredFields.includes('age') && fields.age.hasErrors}\n          onChange={e => (fields.age.value = e.currentTarget.value)}\n          error={fields.age.isDirty && fields.age.hasErrors && fields.age.errors.join(' ')}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default observer(OnblurValidation);\n`}</code></pre>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"],"sourceRoot":""}